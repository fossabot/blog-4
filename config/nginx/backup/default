##
# You should look at the following URL's in order to grasp a solid understanding
# of Nginx configuration files in order to fully unleash the power of Nginx.
# https://www.nginx.com/resources/wiki/start/
# https://www.nginx.com/resources/wiki/start/topics/tutorials/config_pitfalls/
# https://wiki.debian.org/Nginx/DirectoryStructure
#
# In most cases, administrators will remove this file from sites-enabled/ and
# leave it as reference inside of sites-available where it will continue to be
# updated by the nginx packaging team.
#
# This file will automatically load configuration files provided by other
# applications, such as Drupal or Wordpress. These applications will be made
# available underneath a path with that package name, such as /drupal8.
#
# Please see /usr/share/doc/nginx-doc/examples/ for more detailed examples.
##

# Redirect http to https
server {
	listen 80 default_server;
	listen [::]:80 default_server;
	server_name codeep.blue;
	return 301 https://codeep.blue/$request_uri;
}

server {
	listen 443;
	listen [::]:443;
	server_name www.codeep.blue;
	return 301 https://codeep.blue/$request_uri;
}

# Default server configuration
server {
	charset utf-8;

	# SSL configuration
	#
	listen 443 ssl default_server http2;
	listen [::]:443 ssl default_server http2;
	ssl_certificate /mnt/letsencrypt/archive/codeep.blue/fullchain2.pem;
	ssl_certificate_key  /mnt/letsencrypt/archive/codeep.blue/privkey2.pem;
	
	#
	# Note: You should disable gzip for SSL traffic.
	# See: https://bugs.debian.org/773332
	#
	# Read up on ssl_ciphers to ensure a secure configuration.
	# See: https://bugs.debian.org/765782
	#
	# Self signed certs generated by the ssl-cert package
	# Don't use them in a production server!
	#
	# include snippets/snakeoil.conf;

	root /mnt/blog/public;

	# Add index.php to the list if you are using PHP
	index index.html;

	server_name codeep.blue;

	error_page 404 /404.html;

	location ~* \.(?:manifest|appcache|html?|xml|json)$ {
		expires -1;
	}

	location ~* \.(?:rss|atom)$ {
	  expires 1h;
	  add_header Cache-Control "public";
	}

	location ~* \.(?:jpg|jpeg|gif|png|ico|cur|gz|svg|svgz|mp4|ogg|ogv|webm|htc)$ {
	  expires 1M;
	  access_log off;
	  add_header Cache-Control "public";
	}

	location ~* \.(?:css|js)$ {
	  expires 1y;
	  access_log off;
	  add_header Cache-Control "public";
	}

	location / {
	  expires 1d;
	  access_log off;

          add_header Cache-Control "public";

	  # First attempt to serve request as file, then
	  # as directory, then fall back to displaying a 404.
	  try_files $uri $uri/ $uri.html =404;

	  sendfile on;
	  sendfile_max_chunk 1m;

	  tcp_nopush on;
	  tcp_nodelay on;
	}

	location /robots.txt {
		allow all;
		access_log off;
		log_not_found off;
	}

	# deny access to .htaccess files, if Apache's document root
	# concurs with nginx's one
	#
	location ~ /\.ht {
		deny all;
	}

	location ~ /\.log {
		deny all;
	}
}
